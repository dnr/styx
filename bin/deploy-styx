#!/usr/bin/env bash
set -euxo pipefail
cd "$(dirname $(dirname "$0"))"

tfget() {
  terraform -chdir=tf show -json |
    jq -r ".values.root_module.resources[] | select(.address == \"$1\") | .values.$2"
}

# manifester on lambda:
repourl=$(tfget aws_ecr_repository.repo repository_url)
skopeo --insecure-policy list-tags docker://$repourl >&/dev/null ||
  aws ecr get-login-password | skopeo login --username AWS --password-stdin ${repourl%%/*}

script=$(nix-build --no-out-link -A styx-lambda-image)
tag=$(basename $script | cut -c-12)

$script | gzip --fast | skopeo --insecure-policy copy \
  docker-archive:/dev/stdin \
  docker://$repourl:$tag

export TF_VAR_manifester_image_tag="$tag"

# heavy worker:
store="s3://styx-1/nixcache/?region=us-east-1&compression=zstd"
charon=$(nix-build --no-out-link -A charon)

nix store sign -v --key-file keys/styx-nixcache-test-1.secret $(nix-store -qR "$charon")
nix copy -v --to "$store" "$charon"

# write buildroot so this doesn't get collected
{
  echo "meta { build_time: $(date +%s) charon_build: \"$(basename $charon)\" }"
  nix-store -qR "$charon" | sed 's,.*/\([^-]*\)-.*,store_path_hash: "\1",'
} |
  protoc --encode=pb.BuildRoot -Ipb pb/buildroot.proto |
  zstd -c |
  aws s3 cp - "s3://styx-1/buildroot/charon@$(date -u +%FT%TZ)@c@c" --content-encoding zstd

export TF_VAR_charon_storepath="$charon"

export TF_VAR_charon_logdest=$(jq -r <<<$CHARON_SYSLOG_DEST | sed 's|^.*://||;s|:| |')

terraform -chdir=tf apply

# light worker:
orq run
