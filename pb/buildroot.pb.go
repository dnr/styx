// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: buildroot.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BuildRoot struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Meta  *BuildRootMeta         `protobuf:"bytes,10,opt,name=meta,proto3" json:"meta,omitempty"`
	// store path hash as nix32 (base of .narinfo file in nix cache)
	StorePathHash []string `protobuf:"bytes,5,rep,name=store_path_hash,json=storePathHash,proto3" json:"store_path_hash,omitempty"`
	// manifest cache key
	Manifest      []string `protobuf:"bytes,6,rep,name=manifest,proto3" json:"manifest,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuildRoot) Reset() {
	*x = BuildRoot{}
	mi := &file_buildroot_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildRoot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildRoot) ProtoMessage() {}

func (x *BuildRoot) ProtoReflect() protoreflect.Message {
	mi := &file_buildroot_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildRoot.ProtoReflect.Descriptor instead.
func (*BuildRoot) Descriptor() ([]byte, []int) {
	return file_buildroot_proto_rawDescGZIP(), []int{0}
}

func (x *BuildRoot) GetMeta() *BuildRootMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *BuildRoot) GetStorePathHash() []string {
	if x != nil {
		return x.StorePathHash
	}
	return nil
}

func (x *BuildRoot) GetManifest() []string {
	if x != nil {
		return x.Manifest
	}
	return nil
}

type BuildRootMeta struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	BuildTime        int64                  `protobuf:"varint,1,opt,name=build_time,json=buildTime,proto3" json:"build_time,omitempty"`
	NixRelId         string                 `protobuf:"bytes,2,opt,name=nix_rel_id,json=nixRelId,proto3" json:"nix_rel_id,omitempty"`                       // for ci build
	StyxCommit       string                 `protobuf:"bytes,3,opt,name=styx_commit,json=styxCommit,proto3" json:"styx_commit,omitempty"`                   // for ci build
	CharonBuild      string                 `protobuf:"bytes,4,opt,name=charon_build,json=charonBuild,proto3" json:"charon_build,omitempty"`                // for build of charon itself
	ManifestUpstream string                 `protobuf:"bytes,5,opt,name=manifest_upstream,json=manifestUpstream,proto3" json:"manifest_upstream,omitempty"` // for on-demand manifest
	ManifestSph      string                 `protobuf:"bytes,6,opt,name=manifest_sph,json=manifestSph,proto3" json:"manifest_sph,omitempty"`                // for on-demand manifest
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BuildRootMeta) Reset() {
	*x = BuildRootMeta{}
	mi := &file_buildroot_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildRootMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildRootMeta) ProtoMessage() {}

func (x *BuildRootMeta) ProtoReflect() protoreflect.Message {
	mi := &file_buildroot_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildRootMeta.ProtoReflect.Descriptor instead.
func (*BuildRootMeta) Descriptor() ([]byte, []int) {
	return file_buildroot_proto_rawDescGZIP(), []int{1}
}

func (x *BuildRootMeta) GetBuildTime() int64 {
	if x != nil {
		return x.BuildTime
	}
	return 0
}

func (x *BuildRootMeta) GetNixRelId() string {
	if x != nil {
		return x.NixRelId
	}
	return ""
}

func (x *BuildRootMeta) GetStyxCommit() string {
	if x != nil {
		return x.StyxCommit
	}
	return ""
}

func (x *BuildRootMeta) GetCharonBuild() string {
	if x != nil {
		return x.CharonBuild
	}
	return ""
}

func (x *BuildRootMeta) GetManifestUpstream() string {
	if x != nil {
		return x.ManifestUpstream
	}
	return ""
}

func (x *BuildRootMeta) GetManifestSph() string {
	if x != nil {
		return x.ManifestSph
	}
	return ""
}

var File_buildroot_proto protoreflect.FileDescriptor

const file_buildroot_proto_rawDesc = "" +
	"\n" +
	"\x0fbuildroot.proto\x12\x02pb\"v\n" +
	"\tBuildRoot\x12%\n" +
	"\x04meta\x18\n" +
	" \x01(\v2\x11.pb.BuildRootMetaR\x04meta\x12&\n" +
	"\x0fstore_path_hash\x18\x05 \x03(\tR\rstorePathHash\x12\x1a\n" +
	"\bmanifest\x18\x06 \x03(\tR\bmanifest\"\xe0\x01\n" +
	"\rBuildRootMeta\x12\x1d\n" +
	"\n" +
	"build_time\x18\x01 \x01(\x03R\tbuildTime\x12\x1c\n" +
	"\n" +
	"nix_rel_id\x18\x02 \x01(\tR\bnixRelId\x12\x1f\n" +
	"\vstyx_commit\x18\x03 \x01(\tR\n" +
	"styxCommit\x12!\n" +
	"\fcharon_build\x18\x04 \x01(\tR\vcharonBuild\x12+\n" +
	"\x11manifest_upstream\x18\x05 \x01(\tR\x10manifestUpstream\x12!\n" +
	"\fmanifest_sph\x18\x06 \x01(\tR\vmanifestSphB\x18Z\x16github.com/dnr/styx/pbb\x06proto3"

var (
	file_buildroot_proto_rawDescOnce sync.Once
	file_buildroot_proto_rawDescData []byte
)

func file_buildroot_proto_rawDescGZIP() []byte {
	file_buildroot_proto_rawDescOnce.Do(func() {
		file_buildroot_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_buildroot_proto_rawDesc), len(file_buildroot_proto_rawDesc)))
	})
	return file_buildroot_proto_rawDescData
}

var file_buildroot_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_buildroot_proto_goTypes = []any{
	(*BuildRoot)(nil),     // 0: pb.BuildRoot
	(*BuildRootMeta)(nil), // 1: pb.BuildRootMeta
}
var file_buildroot_proto_depIdxs = []int32{
	1, // 0: pb.BuildRoot.meta:type_name -> pb.BuildRootMeta
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_buildroot_proto_init() }
func file_buildroot_proto_init() {
	if File_buildroot_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_buildroot_proto_rawDesc), len(file_buildroot_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_buildroot_proto_goTypes,
		DependencyIndexes: file_buildroot_proto_depIdxs,
		MessageInfos:      file_buildroot_proto_msgTypes,
	}.Build()
	File_buildroot_proto = out.File
	file_buildroot_proto_goTypes = nil
	file_buildroot_proto_depIdxs = nil
}
