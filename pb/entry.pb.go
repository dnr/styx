// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: entry.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EntryType int32

const (
	EntryType_UNKNOWN   EntryType = 0
	EntryType_REGULAR   EntryType = 1
	EntryType_DIRECTORY EntryType = 2
	EntryType_SYMLINK   EntryType = 3
)

// Enum value maps for EntryType.
var (
	EntryType_name = map[int32]string{
		0: "UNKNOWN",
		1: "REGULAR",
		2: "DIRECTORY",
		3: "SYMLINK",
	}
	EntryType_value = map[string]int32{
		"UNKNOWN":   0,
		"REGULAR":   1,
		"DIRECTORY": 2,
		"SYMLINK":   3,
	}
)

func (x EntryType) Enum() *EntryType {
	p := new(EntryType)
	*p = x
	return p
}

func (x EntryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntryType) Descriptor() protoreflect.EnumDescriptor {
	return file_entry_proto_enumTypes[0].Descriptor()
}

func (EntryType) Type() protoreflect.EnumType {
	return &file_entry_proto_enumTypes[0]
}

func (x EntryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EntryType.Descriptor instead.
func (EntryType) EnumDescriptor() ([]byte, []int) {
	return file_entry_proto_rawDescGZIP(), []int{0}
}

// Mostly modeled on nar Header
type Entry struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Path       string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`                    // Path of the entry, relative inside the NAR
	Type       EntryType              `protobuf:"varint,2,opt,name=type,proto3,enum=pb.EntryType" json:"type,omitempty"` // File type (regular/directory/symlink)
	Size       int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`                   // Logical file size in bytes (only for REGULAR)
	Executable bool                   `protobuf:"varint,4,opt,name=executable,proto3" json:"executable,omitempty"`       // Set to true for files that are executable
	// For REGULAR and SYMLINK:
	// If size <= small_file_cutoff || type == SYMLINK, full data is here:
	InlineData []byte `protobuf:"bytes,5,opt,name=inline_data,json=inlineData,proto3" json:"inline_data,omitempty"`
	// Otherwise, this is a series of concatenated digests, one per chunk:
	Digests     []byte `protobuf:"bytes,6,opt,name=digests,proto3" json:"digests,omitempty"`
	DigestBytes int32  `protobuf:"varint,7,opt,name=digest_bytes,json=digestBytes,proto3" json:"digest_bytes,omitempty"` // Number of bytes per digest (default: 24)
	ChunkShift  int32  `protobuf:"varint,8,opt,name=chunk_shift,json=chunkShift,proto3" json:"chunk_shift,omitempty"`    // Chunk size = 1 << chunk_shift (default: 16)
	// Debug data (only in debug output, not on network or db)
	StatsInlineData    int32    `protobuf:"varint,100,opt,name=stats_inline_data,json=statsInlineData,proto3" json:"stats_inline_data,omitempty"`
	StatsPresentChunks int32    `protobuf:"varint,101,opt,name=stats_present_chunks,json=statsPresentChunks,proto3" json:"stats_present_chunks,omitempty"`
	StatsPresentBlocks int32    `protobuf:"varint,102,opt,name=stats_present_blocks,json=statsPresentBlocks,proto3" json:"stats_present_blocks,omitempty"`
	DebugDigests       []string `protobuf:"bytes,103,rep,name=debug_digests,json=debugDigests,proto3" json:"debug_digests,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Entry) Reset() {
	*x = Entry{}
	mi := &file_entry_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entry) ProtoMessage() {}

func (x *Entry) ProtoReflect() protoreflect.Message {
	mi := &file_entry_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entry.ProtoReflect.Descriptor instead.
func (*Entry) Descriptor() ([]byte, []int) {
	return file_entry_proto_rawDescGZIP(), []int{0}
}

func (x *Entry) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Entry) GetType() EntryType {
	if x != nil {
		return x.Type
	}
	return EntryType_UNKNOWN
}

func (x *Entry) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Entry) GetExecutable() bool {
	if x != nil {
		return x.Executable
	}
	return false
}

func (x *Entry) GetInlineData() []byte {
	if x != nil {
		return x.InlineData
	}
	return nil
}

func (x *Entry) GetDigests() []byte {
	if x != nil {
		return x.Digests
	}
	return nil
}

func (x *Entry) GetDigestBytes() int32 {
	if x != nil {
		return x.DigestBytes
	}
	return 0
}

func (x *Entry) GetChunkShift() int32 {
	if x != nil {
		return x.ChunkShift
	}
	return 0
}

func (x *Entry) GetStatsInlineData() int32 {
	if x != nil {
		return x.StatsInlineData
	}
	return 0
}

func (x *Entry) GetStatsPresentChunks() int32 {
	if x != nil {
		return x.StatsPresentChunks
	}
	return 0
}

func (x *Entry) GetStatsPresentBlocks() int32 {
	if x != nil {
		return x.StatsPresentBlocks
	}
	return 0
}

func (x *Entry) GetDebugDigests() []string {
	if x != nil {
		return x.DebugDigests
	}
	return nil
}

var File_entry_proto protoreflect.FileDescriptor

const file_entry_proto_rawDesc = "" +
	"\n" +
	"\ventry.proto\x12\x02pb\"\xa6\x03\n" +
	"\x05Entry\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12!\n" +
	"\x04type\x18\x02 \x01(\x0e2\r.pb.EntryTypeR\x04type\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\x12\x1e\n" +
	"\n" +
	"executable\x18\x04 \x01(\bR\n" +
	"executable\x12\x1f\n" +
	"\vinline_data\x18\x05 \x01(\fR\n" +
	"inlineData\x12\x18\n" +
	"\adigests\x18\x06 \x01(\fR\adigests\x12!\n" +
	"\fdigest_bytes\x18\a \x01(\x05R\vdigestBytes\x12\x1f\n" +
	"\vchunk_shift\x18\b \x01(\x05R\n" +
	"chunkShift\x12*\n" +
	"\x11stats_inline_data\x18d \x01(\x05R\x0fstatsInlineData\x120\n" +
	"\x14stats_present_chunks\x18e \x01(\x05R\x12statsPresentChunks\x120\n" +
	"\x14stats_present_blocks\x18f \x01(\x05R\x12statsPresentBlocks\x12#\n" +
	"\rdebug_digests\x18g \x03(\tR\fdebugDigests*A\n" +
	"\tEntryType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aREGULAR\x10\x01\x12\r\n" +
	"\tDIRECTORY\x10\x02\x12\v\n" +
	"\aSYMLINK\x10\x03B\x18Z\x16github.com/dnr/styx/pbb\x06proto3"

var (
	file_entry_proto_rawDescOnce sync.Once
	file_entry_proto_rawDescData []byte
)

func file_entry_proto_rawDescGZIP() []byte {
	file_entry_proto_rawDescOnce.Do(func() {
		file_entry_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_entry_proto_rawDesc), len(file_entry_proto_rawDesc)))
	})
	return file_entry_proto_rawDescData
}

var file_entry_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_entry_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_entry_proto_goTypes = []any{
	(EntryType)(0), // 0: pb.EntryType
	(*Entry)(nil),  // 1: pb.Entry
}
var file_entry_proto_depIdxs = []int32{
	0, // 0: pb.Entry.type:type_name -> pb.EntryType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_entry_proto_init() }
func file_entry_proto_init() {
	if File_entry_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_entry_proto_rawDesc), len(file_entry_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_entry_proto_goTypes,
		DependencyIndexes: file_entry_proto_depIdxs,
		EnumInfos:         file_entry_proto_enumTypes,
		MessageInfos:      file_entry_proto_msgTypes,
	}.Build()
	File_entry_proto = out.File
	file_entry_proto_goTypes = nil
	file_entry_proto_depIdxs = nil
}
